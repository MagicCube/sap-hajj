import SuperMapView from 'bd/map/MapView';

import BusLayer from './layers/BusLayer';
import StationLayer from './layers/StationLayer';
import TrafficLayer from './layers/TrafficLayer';


export default class MapView extends SuperMapView {
  metadata = {
    properties: {
      baseLayerMode: {
        type: 'string',
        default: 'street'
      },
      perspectiveAngle: {
        type: 'float',
        defaultValue: 0
      },
      defaultZoom: {
        type: 'int',
        defaultValue: 15
      }
    },
    events: {
      zoomChanged: {
      }
    }
  }

  init() {
    super.init();
    this.addStyleClass('moh-map-view');
  }

  afterInit() {
    super.afterInit();

    let zoomEndTimer = null;
    this.map.on('zoomstart', () => {
      if (zoomEndTimer) {
        clearTimeout(zoomEndTimer);
        zoomEndTimer = null;
      }
    });
    this.map.on('zoomend', () => {
      if (zoomEndTimer) {
        clearTimeout(zoomEndTimer);
      }
      zoomEndTimer = setTimeout(() => {
        this.fireZoomChanged();
      }, 500);
    });
  }

  initLayers() {
    super.initLayers();

    this.trafficLayer = new TrafficLayer('traffic-layer', {
      edges: '{gis>/edges}',
      edgeSpeed: '{traffic>/edge-speed}'
    });
    //this.addLayer(this.trafficLayer);

    this.busLayer = new BusLayer('bus-layer', {
      buses: '{bus>/rt}'
    });
    this.addLayer(this.busLayer);

    this.stationLayer = new StationLayer('station-layer', {

    });


    // const temps = "39.82642650604249 21.42031246660408,39.828014373779304 21.42031246660408,39.82996702194214 21.420612098999058,39.83166217803956 21.420851804472438,39.83237028121949 21.421231337333992,39.833486080169685 21.422509756558238,39.83410835266114 21.422649582981915,39.84406471252442 21.421451066434614,39.846510887146 21.421251312720432,39.851725101470954 21.421131460360783,39.851703643798835 21.421111484957944,39.8549222946167 21.421630844543763,39.85788345336914 21.422349954767228,39.86000776290894 21.42282935961563,39.86215353012086 21.423368688188845,39.86305475234986 21.42338866328293,39.86427783966065 21.423148961973542,39.86552238464356 21.42256968218478,39.8681402206421 21.420851804472438,39.87084388732911 21.419054003832482,39.87263560295106 21.41785545777854,39.87410545349121 21.416936565810246,39.874942302703865 21.415997691959365,39.875414371490486 21.415078788304836,39.879469871521 21.412222159597167,39.880650043487556 21.41198243996266,39.88230228424072 21.412481855424055,39.88335371017456 21.4121622297254,39.884233474731445 21.4113032321957,39.88601446151734 21.408566392438104,39.88785982131959 21.406868327406134,39.89032745361329 21.4051502650595,39.89133596420289 21.40455093623391,39.89311695098878 21.403592005001496,39.89496231079102 21.402693001257788,39.89607810974122 21.40161418946727,39.898138046264656 21.39913688781863,39.90028381347656 21.39538089880555,39.90069150924683 21.39416217951268,39.901120662689216 21.39440192837276,39.89882469177247 21.398457620356414,39.896979331970215 21.40097488983466,39.895627498626716 21.402413310076554,39.894683361053474 21.40307258129062,39.89223718643189 21.404271248607635,39.8914647102356 21.405389995901658,39.88980710506439 21.406254022549458,39.88975882530213 21.40642383065424,39.89511251449586 21.41537843143598,39.89727973937989 21.418944137520317,39.89771962165833 21.419153882226368,39.89794492721558 21.419073979516725,39.89823460578919 21.418814295408488,39.89854574203491 21.418215022627376,39.89833116531373 21.41755581972837,39.897923469543464 21.417236205130703,39.89734411239625 21.417326096806978,39.89598155021668 21.418175071021228,39.89570260047913 21.418714416782375,39.895884990692146 21.41932367533922,39.8965072631836 21.41937361445251,39.896904230117805 21.41918384573121,39.8969578742981 21.418754368241007,39.89429712295533 21.41432967778812,39.89385724067689 21.41424977243962,39.891679286956794 21.41540839571529,39.891207218170166 21.415578193181954,39.88997340202332 21.415398407622863,39.889415502548225 21.415448348078144,39.88885760307313 21.41569805009842,39.88703370094299 21.4175358438365,39.884651899337776 21.41874438037738,39.881894588470466 21.419273736208876,39.88072514533997 21.41941356573083,39.87837553024293 21.42023256452826,39.876143932342536 21.421371164981725,39.873697757720954 21.422969185733287,39.865736961364746 21.429101428042813,39.86067295074463 21.431897804821638,39.856982231140144 21.43285655024205,39.85440731048585 21.432936445409478,39.85114574432374 21.43425470935784,39.8490858078003 21.436571629260015,39.848806858062744 21.43693114801695,39.84724044799805 21.438109564399216,39.84490156173707 21.440146804170855,39.84129667282105 21.440566232357472,39.83951568603516 21.440686068760748,39.83876466751099 21.441085522727462,39.83829259872437 21.441564866043834,39.83612537384034 21.44188442737978,39.83513832092286 21.441544893437097,39.83434438705445 21.440246668134183,39.833250045776374 21.439208079574538,39.83288526535035 21.438409160267216,39.83187675476074 21.437390531806273,39.83013868331909 21.43529333317313,39.828507900238044 21.431638143519848,39.826297760009766 21.431817909085666,39.82391595840455 21.432317256717955,39.82095479965211 21.434314630163488,39.8190450668335 21.435473094236936,39.81760740280152 21.435513041109935,39.812479019165046 21.433335920590622,39.81136322021485 21.432746694315426,39.812017679214485 21.430829195733917,39.812479019165046 21.42934111958002,39.81333732604981 21.429181325265603,39.81541872024537 21.42934111958002,39.81743574142457 21.429141376659672,39.817972183227546 21.428901684794486,39.81840133666993 21.428322427828913,39.818766117095954 21.427423576263028,39.819753170013435 21.425945452766577,39.820225238800056 21.424607138855194,39.819967746734626 21.42368828936635,39.82033252716065 21.422989160882015,39.82153415679932 21.422030350660634,39.82316493988037 21.421471041790994,39.82531070709229 21.42023256452826,39.82642650604249 21.42029249108922";
    // const latlngs = temps.split(',').map((latlng) => {
    //   const loc = latlng.split(' ');
    //   const latLng = L.latLng([parseFloat(loc[1]), parseFloat(loc[0])]);
    //   return latLng;
    // });
    // const polyline = L.polyline(latlngs, {color: 'red'});
    // this.map.addLayer(polyline);
  }

  setBaseLayerMode(value) {
    this.setProperty('baseLayerMode', value);
    if (this.baseLayer) {
      this.baseLayer.setUrl(value === 'satellite' ?
        'https://api.mapbox.com/styles/v1/mapbox/satellite-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiaGVucnkxOTg0IiwiYSI6ImI1a0FvUzQifQ.zLCAzKNjXNiRUQoJBzAsZQ' :
        'https://api.mapbox.com/styles/v1/mapbox/traffic-night-v2/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiaGVucnkxOTg0IiwiYSI6ImI1a0FvUzQifQ.zLCAzKNjXNiRUQoJBzAsZQ'
      );
    }
  }
}
